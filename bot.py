from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import yt_dlp
import os

TOKEN = "7302516914:AAFf7O9szcJD5GZGSsSs3TuyHdyvKhF8zN8"

LANGUAGES = {
    'üá∞üáø “ö–∞–∑–∞“õ—à–∞': 'kk',
    'üá∑üá∫ –†—É—Å—Å–∫–∏–π': 'ru',
    'üá¨üáß English': 'en'
}

GREETINGS = {
    'kk': "–°”ô–ª–µ–º, {name}! üëã\n–ú–µ–Ω ‚Äî Tyn‚Äôda Music Bot. –°—ñ–∑–¥—ñ –∫”©—Ä–≥–µ–Ω—ñ–º–µ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–Ω! ‚ò∫Ô∏è\n–ú—É–∑—ã–∫–∞ ”ô–ª–µ–º—ñ–Ω–¥–µ –±—ñ—Ä–≥–µ —Å–∞–ø–∞—Ä —à–µ–≥–µ–π—ñ–∫ üé∂ ‚Äî “õ–∞–ª–∞“ì–∞–Ω ”ô–Ω—ñ“£—ñ–∑–¥—ñ –∂–∞–∑—ã“£—ã–∑, –º–µ–Ω –±—ñ—Ä–¥–µ–Ω —Ç–∞—É—ã–ø –±–µ—Ä–µ–º—ñ–Ω! üîç",
    'ru': "–ü—Ä–∏–≤–µ—Ç, {name}! üëã\n–Ø ‚Äî Tyn‚Äôda Music Bot. –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! ‚ò∫Ô∏è\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏, –∏ —è —Å—Ä–∞–∑—É –Ω–∞–π–¥—É –µ—ë –¥–ª—è –≤–∞—Å! üé∂",
    'en': "Hello, {name}! üëã\nI‚Äôm Tyn‚Äôda Music Bot. Happy to see you! ‚ò∫Ô∏è\nTell me the name of the song and I‚Äôll find it for you instantly! üé∂"
}

FOUND_MESSAGES = {
    'kk': "–°—ñ–∑ —Ç–∞“£–¥–∞“ì–∞–Ω ”ô—É–µ–Ω –¥–∞–π—ã–Ω! üéß‚ú® –¢—ã“£–¥–∞“£—ã–∑ –¥–∞, –ª”ô–∑–∑–∞—Ç –∞–ª—ã“£—ã–∑! –ú–µ–Ω ”ô—Ä“õ–∞—à–∞–Ω —Å—ñ–∑–¥—ñ“£ –º—É–∑—ã–∫–∞–ª—ã“õ —Å–µ—Ä—ñ–≥—ñ“£—ñ–∑–±—ñ–Ω! ü´∂üé∂\n–°—ñ–∑–≥–µ ”ô—Ä“õ–∞—à–∞–Ω –∫”©–º–µ–∫—Ç–µ—Å—É –º–∞“ì–∞–Ω –ª”ô–∑–∑–∞—Ç –±–µ—Ä–µ–¥—ñ üñ§",
    'ru': "–í–∞—à–∞ –ø–µ—Å–Ω—è –≥–æ—Ç–æ–≤–∞! üéß‚ú® –°–ª—É—à–∞–π—Ç–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å! –Ø –≤—Å–µ–≥–¥–∞ –≤–∞—à –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫! ü´∂üé∂\n–ü–æ–º–æ–≥–∞—Ç—å –≤–∞–º ‚Äî —ç—Ç–æ –º–æ—ë —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ üñ§",
    'en': "Your song is ready! üéß‚ú® Listen and enjoy! I'm always your music companion! ü´∂üé∂\nHelping you is my pleasure üñ§"
}

NOT_FOUND_MESSAGES = {
    'kk': "”®–∫—ñ–Ω—ñ—à–∫–µ –æ—Ä–∞–π, –±“±–ª ”ô–Ω–¥—ñ —Ç–∞–±–∞ –∞–ª–º–∞–¥—ã–º.ü•≤\n–ê–≤—Ç–æ—Ä–ª—ã“õ “õ“±“õ—ã“õ—Ç–∞—Ä –º–µ–Ω –±–∞—Å“õ–∞ –¥–∞ —à–µ–∫—Ç–µ—É–ª–µ—Ä —Å–µ–±–µ–ø—Ç—ñ, –Ω–µ–º–µ—Å–µ –±–∞—Å“õ–∞ ”ô—É–µ–Ω —ñ–∑–¥–µ–ø –∫”©—Ä—ñ“£—ñ–∑! ”ò—Ä “õ–∞—à–∞–Ω —Å—ñ–∑–≥–µ –∫”©–º–µ–∫—Ç–µ—Å—É–≥–µ –¥–∞–π—ã–Ω–º—ã–Ω üé∂‚ú®ü´Ç",
    'ru': "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç—Ç—É –ø–µ—Å–Ω—é.ü•≤\n–í–æ–∑–º–æ–∂–Ω–æ, –∏–∑-–∑–∞ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∞–≤ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –ø–µ—Å–Ω—é! –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! üé∂‚ú®ü´Ç",
    'en': "Sorry, I couldn't find this song.ü•≤\nIt might be due to copyright restrictions or other limitations. Try finding another song! I'm always here to help! üé∂‚ú®ü´Ç"
}

user_lang = {}  # user_id: 'kk' or 'ru' or 'en'

def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_lang.pop(user_id, None)
    keyboard = [[key for key in LANGUAGES]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)
    update.message.reply_text("1. –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Select language:", reply_markup=reply_markup)

def handle_language_selection(update: Update, context: CallbackContext):
    lang_key = update.message.text
    user_id = update.message.from_user.id
    name = update.message.from_user.first_name

    if lang_key in LANGUAGES:
        lang_code = LANGUAGES[lang_key]
        user_lang[user_id] = lang_code
        update.message.reply_text(GREETINGS[lang_code].format(name=name), reply_markup=ReplyKeyboardRemove())
    else:
        update.message.reply_text("–¢—ñ–ª–¥—ñ –¥“±—Ä—ã—Å —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ / Choose a valid language")

def download_audio(query: str, file_name: str = "song.mp3") -> str or None:
    ydl_opts = {
        'format': 'bestaudio/best',
        'outtmpl': file_name,
        'noplaylist': True,
        'quiet': False,            # –ü–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤
        'verbose': True,           # –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ–∂–∏–º
        'default_search': 'ytsearch1',  # –ü–æ–∏—Å–∫ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '320',
        }],
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        try:
            info = ydl.extract_info(query, download=True)
            return file_name if os.path.exists(file_name) else None
        except Exception as e:
            print("“ö–∞—Ç–µ:", e)
            return None

def handle_music_request(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    lang_code = user_lang.get(user_id)

    if not lang_code:
        keyboard = [[key for key in LANGUAGES]]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=False, resize_keyboard=True)
        update.message.reply_text("2. –ê–ª–¥—ã–º–µ–Ω —Ç—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑! / –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫! / Please select a language first!", reply_markup=reply_markup)
        return

    if update.message.audio or update.message.photo:
        update.message.reply_text("–ú–µ–Ω —Ç–µ–∫ –º”ô—Ç—ñ–Ω–¥–µ—Ä–º–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ–π –∞–ª–∞–º—ã–Ω! üö´üé∂")
        return

    song_name = update.message.text.strip()
    update.message.reply_text("”ò–Ω —ñ–∑–¥–µ–ª—ñ–ø –∂–∞—Ç—ã—Ä... –ö“Ø—Ç–µ —Ç“±—Ä—ã“£—ã–∑.")

    audio_file = download_audio(song_name)

    if audio_file:
        update.message.reply_audio(audio=open(audio_file, 'rb'))
        update.message.reply_text(FOUND_MESSAGES[lang_code])
        os.remove(audio_file)
    else:
        update.message.reply_text(NOT_FOUND_MESSAGES[lang_code])

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & Filters.regex('^(üá∞üáø “ö–∞–∑–∞“õ—à–∞|üá∑üá∫ –†—É—Å—Å–∫–∏–π|üá¨üáß English)$'), handle_language_selection))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_music_request))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()