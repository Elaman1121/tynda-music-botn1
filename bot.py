from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

TOKEN = "7302516914:AAFf7O9szcJD5GZGSsSs3TuyHdyvKhF8zN8"  # –°—ñ–∑–¥—ñ“£ —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑

# –¢—ñ–ª–¥–µ—Ä –º–µ–Ω –æ–ª–∞—Ä–¥—ã“£ —Ñ–ª–∞–≥—Ç–∞—Ä—ã
languages = [
    ('“ö–∞–∑–∞“õ—à–∞', 'üá∞üáø'),
    ('–†—É—Å—Å–∫–∏–π', 'üá∑üá∫'),
    ('English', 'üá¨üáß')
]

# –°”ô–ª–µ–º–¥–µ—Å—É —Ö–∞–±–∞—Ä–ª–∞–º–∞—Å—ã
def start(update: Update, context: CallbackContext):
    user_name = update.message.from_user.first_name
    # –¢–µ–∫ —Ç—ñ–ª–¥—ñ —Ç–∞“£–¥–∞—É —ç–∫—Ä–∞–Ω—ã–Ω –∫”©—Ä—Å–µ—Ç—É
    update.message.reply_text(
        f"–°”ô–ª–µ–º, {user_name}! üëã\n"
        "–ú–µ–Ω ‚Äî Tyn‚Äôda Music Bot. –°—ñ–∑–¥—ñ –∫”©—Ä–≥–µ–Ω—ñ–º–µ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–Ω! ‚ò∫Ô∏è\n"
        "–ú—É–∑—ã–∫–∞ ”ô–ª–µ–º—ñ–Ω–¥–µ –±—ñ—Ä–≥–µ —Å–∞–ø–∞—Ä —à–µ–≥–µ–π—ñ–∫ üé∂ ‚Äî “õ–∞–ª–∞“ì–∞–Ω ”ô–Ω—ñ“£—ñ–∑–¥—ñ –∞–π—Ç—ã“£—ã–∑, –º–µ–Ω –ª–µ–∑–¥–µ —Ç–∞—É—ã–ø –±–µ—Ä–µ–º—ñ–Ω! üîç\n"
        "–°—ñ–∑–±–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ—É–≥–µ –¥–∞–π—ã–Ω–º—ã–Ω, “õ–∞–π —Ç—ñ–ª–¥–µ —Å”©–π–ª–µ—Å–∫—ñ“£—ñ–∑ –∫–µ–ª–µ–¥—ñ? üéß"
    )
    # –¢—ñ–ª —Ç–∞“£–¥–∞—É–¥—ã —Å“±—Ä–∞—É
    keyboard = [[f"{flag} {language}" for language, flag in languages]]
    reply_markup = {'keyboard': keyboard, 'one_time_keyboard': True, 'resize_keyboard': True}
    update.message.reply_text("–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=reply_markup)

# –¢—ñ–ª —Ç–∞“£–¥–∞—É
def handle_message(update: Update, context: CallbackContext):
    query = update.message.text.strip()
    for language, flag in languages:
        if f"{flag} {language}" == query:
            # –¢—ñ–ª–¥—ñ —Å–∞“õ—Ç–∞–ø, –æ–Ω—ã“£ —ñ—à—ñ–Ω–µ–Ω –∂–∞—É–∞–ø “õ–∞–π—Ç–∞—Ä–∞–º—ã–∑
            context.user_data['language'] = language
            language_responses = {
                '“ö–∞–∑–∞“õ—à–∞': "–°—ñ–∑ —Ç—ñ–ª —Ä–µ—Ç—ñ–Ω–¥–µ “ö–∞–∑–∞“õ—à–∞–Ω—ã —Ç–∞“£–¥–∞–¥—ã“£—ã–∑!",
                '–†—É—Å—Å–∫–∏–π': "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫!",
                'English': "You selected English language!"
            }
            update.message.reply_text(language_responses.get(language, "–¢—ñ–ª —Ç–∞“£–¥–∞–ª–º–∞–¥—ã"))
            break
    else:
        update.message.reply_text("–¢–∞“£–¥–∞—É–¥—ã –¥“±—Ä—ã—Å –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑!")

# –ú—É–∑—ã–∫–∞ —Å“±—Ä–∞—É
def music_request(update: Update, context: CallbackContext):
    # –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“ì–∞–Ω —Å–æ“£, ”ô–Ω–¥—ñ —ñ–∑–¥–µ—É –º“Ø–º–∫—ñ–Ω–¥—ñ–≥—ñ –±–µ—Ä—ñ–ª–µ–¥—ñ
    if 'language' in context.user_data:
        language = context.user_data['language']
        
        # –¢—ñ–ª –±–æ–π—ã–Ω—à–∞ —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä
        music_messages = {
            '“ö–∞–∑–∞“õ—à–∞': "“ö–∞–ª–∞“ì–∞–Ω ”ô–Ω—ñ“£—ñ–∑–¥—ñ“£ –∞—Ç—ã–Ω –∂–∞–∑—ã“£—ã–∑! üé∂",
            '–†—É—Å—Å–∫–∏–π': "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏! üé∂",
            'English': "Write the name of the song! üé∂"
        }
        update.message.reply_text(music_messages.get(language, "–¢—ñ–ª —Ç–∞“£–¥–∞–ª–º–∞–¥—ã"))
    else:
        update.message.reply_text("–¢—ñ–ª —Ç–∞“£–¥–∞—É–¥—ã “±–º—ã—Ç–ø–∞“£—ã–∑! –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞–ø –∞–ª“ì–∞–Ω–Ω–∞–Ω –∫–µ–π—ñ–Ω –º–µ–Ω —Å—ñ–∑–≥–µ ”ô–Ω —ñ–∑–¥–µ—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω.")

# ”ò–Ω —Ç–∞–ø“õ–∞–Ω —Å–æ“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞
def song_found(update: Update, context: CallbackContext):
    if 'language' in context.user_data:
        language = context.user_data['language']
        
        song_messages = {
            '“ö–∞–∑–∞“õ—à–∞': "–°—ñ–∑ —Ç–∞“£–¥–∞“ì–∞–Ω ”ô—É–µ–Ω –¥–∞–π—ã–Ω! üéß‚ú® –¢—ã“£–¥–∞“£—ã–∑ –¥–∞, –ª”ô–∑–∑–∞—Ç –∞–ª—ã“£—ã–∑! –ú–µ–Ω ”ô—Ä“õ–∞—à–∞–Ω —Å—ñ–∑–¥—ñ“£ –º—É–∑—ã–∫–∞–ª—ã“õ —Å–µ—Ä—ñ–≥—ñ“£—ñ–∑–±—ñ–Ω! ü´∂üé∂",
            '–†—É—Å—Å–∫–∏–π': "–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–º–∏ –ø–µ—Å–Ω—è –≥–æ—Ç–æ–≤–∞! üéß‚ú® –°–ª—É—à–∞–π—Ç–µ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å! –Ø –≤—Å–µ–≥–¥–∞ –≤–∞—à –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫! ü´∂üé∂",
            'English': "The song you selected is ready! üéß‚ú® Listen and enjoy! I‚Äôm always your musical companion! ü´∂üé∂"
        }
        update.message.reply_text(song_messages.get(language, "–¢—ñ–ª —Ç–∞“£–¥–∞–ª–º–∞–¥—ã"))
    else:
        update.message.reply_text("–¢—ñ–ª —Ç–∞“£–¥–∞—É–¥—ã “±–º—ã—Ç–ø–∞“£—ã–∑!")

# “ö–æ—Ä—ã—Ç—ã–Ω–¥—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞
def thank_you(update: Update, context: CallbackContext):
    if 'language' in context.user_data:
        language = context.user_data['language']
        
        thank_you_messages = {
            '“ö–∞–∑–∞“õ—à–∞': "–°—ñ–∑–≥–µ ”ô—Ä“õ–∞—à–∞–Ω –∫”©–º–µ–∫—Ç–µ—Å—É –º–∞“ì–∞–Ω –ª”ô–∑–∑–∞—Ç –±–µ—Ä–µ–¥—ñ üñ§",
            '–†—É—Å—Å–∫–∏–π': "–ü–æ–º–æ–≥–∞—Ç—å –≤–∞–º ‚Äî —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –¥–ª—è –º–µ–Ω—è üñ§",
            'English': "Helping you is always a pleasure for me üñ§"
        }
        update.message.reply_text(thank_you_messages.get(language, "–¢—ñ–ª —Ç–∞“£–¥–∞–ª–º–∞–¥—ã"))

def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, music_request))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, song_found))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, thank_you))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()